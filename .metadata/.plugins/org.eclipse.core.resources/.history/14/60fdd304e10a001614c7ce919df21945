package join;

// join() forces the calling thread to wait for another thread to stop
// running before proceeding

public class ThreadJoin implements Runnable {

   int myID, i;
   
   
   
  public ThreadJoin(int j) {
       myID = j;
}

public void run() {
     Thread thread2= new Thread(2);


    for (i= 0; i < 2; i++) {
      try {
        // random delay up to 1 sec. before every iteration
        Thread.sleep((int) (Math.random() * 1000));
      } catch (InterruptedException e) {
        e.printStackTrace();
      }

      System.out.println(i);
    }
  }

  public static void main(String[] args) {
    ThreadJoin t1= new ThreadJoin(1);
    ThreadJoin t2= new ThreadJoin(2);

    Thread thread1= new Thread(t1);
    Thread thread2= new Thread(t2);

    thread1.start();
    thread2.start();

    try {
      thread1.join();
      thread2.join();
    } catch (InterruptedException e) {
      e.printStackTrace();
    }

    System.out.println("Done!");
  }

}
